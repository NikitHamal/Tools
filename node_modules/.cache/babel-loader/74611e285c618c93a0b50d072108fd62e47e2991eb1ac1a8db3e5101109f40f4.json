{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repositories\\\\Tools\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Alert from '@mui/material/Alert';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Radio from '@mui/material/Radio';\nimport TextField from '@mui/material/TextField';\nimport TranscribeForm from './components/TranscribeForm';\nimport VideoPlayer from './components/VideoPlayer';\nimport Transcript from './components/Transcript';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  typography: {\n    fontFamily: 'Poppins, Arial, sans-serif'\n  },\n  palette: {\n    primary: {\n      main: '#3f51b5'\n    },\n    secondary: {\n      main: '#f50057'\n    }\n  },\n  components: {\n    MuiTypography: {\n      styleOverrides: {\n        h3: {\n          fontWeight: 600\n        }\n      }\n    },\n    MuiButton: {\n      styleOverrides: {\n        root: {\n          textTransform: 'none',\n          fontWeight: 500,\n          borderRadius: 8\n        }\n      }\n    },\n    MuiTextField: {\n      styleOverrides: {\n        root: {\n          '& .MuiOutlinedInput-root': {\n            borderRadius: 8\n          }\n        }\n      }\n    }\n  }\n});\nfunction App() {\n  _s();\n  const [videoUrl, setVideoUrl] = useState('');\n  const [videoId, setVideoId] = useState('');\n  const [transcript, setTranscript] = useState([]);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [transcriptionQuality, setTranscriptionQuality] = useState('standard');\n  const [transcriptionMethod, setTranscriptionMethod] = useState('auto');\n  const [youtubeApiKey, setYoutubeApiKey] = useState('');\n  const [showApiKeyField, setShowApiKeyField] = useState(false);\n  const handleSubmit = url => {\n    setVideoUrl(url);\n    setError(null);\n    const id = extractVideoId(url);\n    if (!id) {\n      setError('Invalid YouTube URL. Please provide a valid YouTube video URL.');\n      return;\n    }\n    setVideoId(id);\n    fetchTranscript(id);\n  };\n  const extractVideoId = url => {\n    const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n    const match = url.match(regExp);\n    return match && match[2].length === 11 ? match[2] : null;\n  };\n  const fetchTranscript = async videoId => {\n    try {\n      setLoading(true);\n      setTranscript([]);\n\n      // Build API URL with all parameters\n      let apiUrl = `/api/transcript?videoId=${videoId}&quality=${transcriptionQuality}&method=${transcriptionMethod}`;\n\n      // Add YouTube API key if provided\n      if (youtubeApiKey) {\n        apiUrl += `&youtubeApiKey=${encodeURIComponent(youtubeApiKey)}`;\n      }\n      const response = await fetch(apiUrl);\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.userMessage || errorData.error || 'Failed to fetch transcript');\n      }\n      const data = await response.json();\n      if (!data.transcript || data.transcript.length === 0) {\n        throw new Error('No transcript data available for this video');\n      }\n      setTranscript(data.transcript);\n    } catch (error) {\n      console.error('Error fetching transcript:', error);\n      setError(error.message || 'Failed to fetch transcript');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleTimeUpdate = time => {\n    setCurrentTime(time);\n  };\n  const handleQualityChange = event => {\n    setTranscriptionQuality(event.target.value);\n  };\n  const handleMethodChange = event => {\n    const method = event.target.value;\n    setTranscriptionMethod(method);\n    setShowApiKeyField(method === 'api');\n  };\n  const handleApiKeyChange = event => {\n    setYoutubeApiKey(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          my: 4,\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          component: \"h1\",\n          gutterBottom: true,\n          className: \"app-title\",\n          children: \"YouTube Transcription\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 4,\n            display: 'flex',\n            justifyContent: 'center',\n            gap: 2,\n            flexWrap: 'wrap'\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            sx: {\n              minWidth: 150\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"quality-label\",\n              children: \"Quality\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"quality-label\",\n              value: transcriptionQuality,\n              label: \"Quality\",\n              onChange: handleQualityChange,\n              size: \"small\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"standard\",\n                children: \"Standard\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"high\",\n                children: \"Enhanced\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n              row: true,\n              value: transcriptionMethod,\n              onChange: handleMethodChange,\n              children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"auto\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 28\n                }, this),\n                label: \"Auto-detect\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"api\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 28\n                }, this),\n                label: \"YouTube API (key required)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"ocr\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 28\n                }, this),\n                label: \"OCR (experimental)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), showApiKeyField && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"YouTube API Key\",\n            variant: \"outlined\",\n            size: \"small\",\n            fullWidth: true,\n            value: youtubeApiKey,\n            onChange: handleApiKeyChange,\n            placeholder: \"Enter your YouTube Data API v3 key\",\n            helperText: \"Get a key from Google Cloud Console\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TranscribeForm, {\n          onSubmit: handleSubmit,\n          isLoading: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 4\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), videoId && /*#__PURE__*/_jsxDEV(Box, {\n          className: \"player-container\",\n          children: /*#__PURE__*/_jsxDEV(VideoPlayer, {\n            videoId: videoId,\n            onTimeUpdate: handleTimeUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            mt: 4\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this) : transcript.length > 0 ? /*#__PURE__*/_jsxDEV(Transcript, {\n          transcript: transcript,\n          currentTime: currentTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RBrfK2rnC+1Dj1zlnI8s8dLcLek=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ThemeProvider","createTheme","CssBaseline","Container","Typography","Box","CircularProgress","Alert","FormControl","InputLabel","Select","MenuItem","RadioGroup","FormControlLabel","Radio","TextField","TranscribeForm","VideoPlayer","Transcript","jsxDEV","_jsxDEV","theme","typography","fontFamily","palette","primary","main","secondary","components","MuiTypography","styleOverrides","h3","fontWeight","MuiButton","root","textTransform","borderRadius","MuiTextField","App","_s","videoUrl","setVideoUrl","videoId","setVideoId","transcript","setTranscript","currentTime","setCurrentTime","loading","setLoading","error","setError","transcriptionQuality","setTranscriptionQuality","transcriptionMethod","setTranscriptionMethod","youtubeApiKey","setYoutubeApiKey","showApiKeyField","setShowApiKeyField","handleSubmit","url","id","extractVideoId","fetchTranscript","regExp","match","length","apiUrl","encodeURIComponent","response","fetch","ok","errorData","json","Error","userMessage","data","console","message","handleTimeUpdate","time","handleQualityChange","event","target","value","handleMethodChange","method","handleApiKeyChange","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","sx","my","textAlign","variant","component","gutterBottom","className","mb","display","justifyContent","gap","flexWrap","minWidth","labelId","label","onChange","size","row","control","fullWidth","placeholder","helperText","onSubmit","isLoading","severity","onTimeUpdate","mt","_c","$RefreshReg$"],"sources":["D:/Repositories/Tools/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Container from '@mui/material/Container';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Alert from '@mui/material/Alert';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Select from '@mui/material/Select';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Radio from '@mui/material/Radio';\r\nimport TextField from '@mui/material/TextField';\r\nimport TranscribeForm from './components/TranscribeForm';\r\nimport VideoPlayer from './components/VideoPlayer';\r\nimport Transcript from './components/Transcript';\r\n\r\nconst theme = createTheme({\r\n  typography: {\r\n    fontFamily: 'Poppins, Arial, sans-serif',\r\n  },\r\n  palette: {\r\n    primary: {\r\n      main: '#3f51b5',\r\n    },\r\n    secondary: {\r\n      main: '#f50057',\r\n    },\r\n  },\r\n  components: {\r\n    MuiTypography: {\r\n      styleOverrides: {\r\n        h3: {\r\n          fontWeight: 600,\r\n        },\r\n      },\r\n    },\r\n    MuiButton: {\r\n      styleOverrides: {\r\n        root: {\r\n          textTransform: 'none',\r\n          fontWeight: 500,\r\n          borderRadius: 8,\r\n        },\r\n      },\r\n    },\r\n    MuiTextField: {\r\n      styleOverrides: {\r\n        root: {\r\n          '& .MuiOutlinedInput-root': {\r\n            borderRadius: 8,\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  const [videoUrl, setVideoUrl] = useState('');\r\n  const [videoId, setVideoId] = useState('');\r\n  const [transcript, setTranscript] = useState([]);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [transcriptionQuality, setTranscriptionQuality] = useState('standard');\r\n  const [transcriptionMethod, setTranscriptionMethod] = useState('auto');\r\n  const [youtubeApiKey, setYoutubeApiKey] = useState('');\r\n  const [showApiKeyField, setShowApiKeyField] = useState(false);\r\n\r\n  const handleSubmit = (url) => {\r\n    setVideoUrl(url);\r\n    setError(null);\r\n    const id = extractVideoId(url);\r\n    \r\n    if (!id) {\r\n      setError('Invalid YouTube URL. Please provide a valid YouTube video URL.');\r\n      return;\r\n    }\r\n    \r\n    setVideoId(id);\r\n    fetchTranscript(id);\r\n  };\r\n\r\n  const extractVideoId = (url) => {\r\n    const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\r\n    const match = url.match(regExp);\r\n    return match && match[2].length === 11 ? match[2] : null;\r\n  };\r\n\r\n  const fetchTranscript = async (videoId) => {\r\n    try {\r\n      setLoading(true);\r\n      setTranscript([]);\r\n      \r\n      // Build API URL with all parameters\r\n      let apiUrl = `/api/transcript?videoId=${videoId}&quality=${transcriptionQuality}&method=${transcriptionMethod}`;\r\n      \r\n      // Add YouTube API key if provided\r\n      if (youtubeApiKey) {\r\n        apiUrl += `&youtubeApiKey=${encodeURIComponent(youtubeApiKey)}`;\r\n      }\r\n      \r\n      const response = await fetch(apiUrl);\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.userMessage || errorData.error || 'Failed to fetch transcript');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (!data.transcript || data.transcript.length === 0) {\r\n        throw new Error('No transcript data available for this video');\r\n      }\r\n      \r\n      setTranscript(data.transcript);\r\n    } catch (error) {\r\n      console.error('Error fetching transcript:', error);\r\n      setError(error.message || 'Failed to fetch transcript');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleTimeUpdate = (time) => {\r\n    setCurrentTime(time);\r\n  };\r\n\r\n  const handleQualityChange = (event) => {\r\n    setTranscriptionQuality(event.target.value);\r\n  };\r\n\r\n  const handleMethodChange = (event) => {\r\n    const method = event.target.value;\r\n    setTranscriptionMethod(method);\r\n    setShowApiKeyField(method === 'api');\r\n  };\r\n\r\n  const handleApiKeyChange = (event) => {\r\n    setYoutubeApiKey(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"md\">\r\n        <Box sx={{ my: 4, textAlign: 'center' }}>\r\n          <Typography variant=\"h3\" component=\"h1\" gutterBottom className=\"app-title\">\r\n            YouTube Transcription\r\n          </Typography>\r\n          \r\n          <Box sx={{ mb: 4, display: 'flex', justifyContent: 'center', gap: 2, flexWrap: 'wrap' }}>\r\n            <FormControl sx={{ minWidth: 150 }}>\r\n              <InputLabel id=\"quality-label\">Quality</InputLabel>\r\n              <Select\r\n                labelId=\"quality-label\"\r\n                value={transcriptionQuality}\r\n                label=\"Quality\"\r\n                onChange={handleQualityChange}\r\n                size=\"small\"\r\n              >\r\n                <MenuItem value=\"standard\">Standard</MenuItem>\r\n                <MenuItem value=\"high\">Enhanced</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            \r\n            <FormControl>\r\n              <RadioGroup\r\n                row\r\n                value={transcriptionMethod}\r\n                onChange={handleMethodChange}\r\n              >\r\n                <FormControlLabel \r\n                  value=\"auto\" \r\n                  control={<Radio size=\"small\" />} \r\n                  label=\"Auto-detect\" \r\n                />\r\n                <FormControlLabel \r\n                  value=\"api\" \r\n                  control={<Radio size=\"small\" />} \r\n                  label=\"YouTube API (key required)\" \r\n                />\r\n                <FormControlLabel \r\n                  value=\"ocr\" \r\n                  control={<Radio size=\"small\" />} \r\n                  label=\"OCR (experimental)\" \r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Box>\r\n          \r\n          {showApiKeyField && (\r\n            <Box sx={{ mb: 3 }}>\r\n              <TextField\r\n                label=\"YouTube API Key\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                fullWidth\r\n                value={youtubeApiKey}\r\n                onChange={handleApiKeyChange}\r\n                placeholder=\"Enter your YouTube Data API v3 key\"\r\n                helperText=\"Get a key from Google Cloud Console\"\r\n              />\r\n            </Box>\r\n          )}\r\n          \r\n          <TranscribeForm onSubmit={handleSubmit} isLoading={loading} />\r\n          \r\n          {error && (\r\n            <Alert severity=\"error\" sx={{ mb: 4 }}>\r\n              {error}\r\n            </Alert>\r\n          )}\r\n          \r\n          {videoId && (\r\n            <Box className=\"player-container\">\r\n              <VideoPlayer \r\n                videoId={videoId} \r\n                onTimeUpdate={handleTimeUpdate} \r\n              />\r\n            </Box>\r\n          )}\r\n          \r\n          {loading ? (\r\n            <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\r\n              <CircularProgress />\r\n            </Box>\r\n          ) : transcript.length > 0 ? (\r\n            <Transcript \r\n              transcript={transcript} \r\n              currentTime={currentTime} \r\n            />\r\n          ) : null}\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}