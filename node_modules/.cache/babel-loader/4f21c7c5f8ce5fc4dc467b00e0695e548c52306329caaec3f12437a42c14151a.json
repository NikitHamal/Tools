{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repositories\\\\Tools\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Alert from '@mui/material/Alert';\nimport TranscribeForm from './components/TranscribeForm';\nimport VideoPlayer from './components/VideoPlayer';\nimport Transcript from './components/Transcript';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  typography: {\n    fontFamily: 'Poppins, Arial, sans-serif'\n  },\n  palette: {\n    primary: {\n      main: '#3f51b5'\n    },\n    secondary: {\n      main: '#f50057'\n    }\n  },\n  components: {\n    MuiTypography: {\n      styleOverrides: {\n        h3: {\n          fontWeight: 600\n        }\n      }\n    },\n    MuiButton: {\n      styleOverrides: {\n        root: {\n          textTransform: 'none',\n          fontWeight: 500,\n          borderRadius: 8\n        }\n      }\n    },\n    MuiTextField: {\n      styleOverrides: {\n        root: {\n          '& .MuiOutlinedInput-root': {\n            borderRadius: 8\n          }\n        }\n      }\n    }\n  }\n});\nfunction App() {\n  _s();\n  const [videoUrl, setVideoUrl] = useState('');\n  const [videoId, setVideoId] = useState('');\n  const [transcript, setTranscript] = useState([]);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleSubmit = url => {\n    setVideoUrl(url);\n    setError(null);\n    const id = extractVideoId(url);\n    if (!id) {\n      setError('Invalid YouTube URL. Please provide a valid YouTube video URL.');\n      return;\n    }\n    setVideoId(id);\n    fetchTranscript(id);\n  };\n  const extractVideoId = url => {\n    const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n    const match = url.match(regExp);\n    return match && match[2].length === 11 ? match[2] : null;\n  };\n  const fetchTranscript = async videoId => {\n    try {\n      setLoading(true);\n      setTranscript([]);\n      const response = await fetch(`/api/transcript?videoId=${videoId}`);\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to fetch transcript');\n      }\n      const data = await response.json();\n      if (!data.transcript || data.transcript.length === 0) {\n        throw new Error('No transcript data available for this video');\n      }\n      setTranscript(data.transcript);\n    } catch (error) {\n      console.error('Error fetching transcript:', error);\n      setError(error.message || 'Failed to fetch transcript');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleTimeUpdate = time => {\n    setCurrentTime(time);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          my: 4,\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          component: \"h1\",\n          gutterBottom: true,\n          className: \"app-title\",\n          children: \"YouTube Transcription\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TranscribeForm, {\n          onSubmit: handleSubmit,\n          isLoading: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 4\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), videoId && /*#__PURE__*/_jsxDEV(Box, {\n          className: \"player-container\",\n          children: /*#__PURE__*/_jsxDEV(VideoPlayer, {\n            videoId: videoId,\n            onTimeUpdate: handleTimeUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            mt: 4\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this) : transcript.length > 0 ? /*#__PURE__*/_jsxDEV(Transcript, {\n          transcript: transcript,\n          currentTime: currentTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mTj3ymHJJS8PAqg8HOQ6mm3H4AU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ThemeProvider","createTheme","CssBaseline","Container","Typography","Box","CircularProgress","Alert","TranscribeForm","VideoPlayer","Transcript","jsxDEV","_jsxDEV","theme","typography","fontFamily","palette","primary","main","secondary","components","MuiTypography","styleOverrides","h3","fontWeight","MuiButton","root","textTransform","borderRadius","MuiTextField","App","_s","videoUrl","setVideoUrl","videoId","setVideoId","transcript","setTranscript","currentTime","setCurrentTime","loading","setLoading","error","setError","handleSubmit","url","id","extractVideoId","fetchTranscript","regExp","match","length","response","fetch","ok","errorData","json","Error","data","console","message","handleTimeUpdate","time","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","sx","my","textAlign","variant","component","gutterBottom","className","onSubmit","isLoading","severity","mb","onTimeUpdate","display","justifyContent","mt","_c","$RefreshReg$"],"sources":["D:/Repositories/Tools/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Container from '@mui/material/Container';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Alert from '@mui/material/Alert';\r\nimport TranscribeForm from './components/TranscribeForm';\r\nimport VideoPlayer from './components/VideoPlayer';\r\nimport Transcript from './components/Transcript';\r\n\r\nconst theme = createTheme({\r\n  typography: {\r\n    fontFamily: 'Poppins, Arial, sans-serif',\r\n  },\r\n  palette: {\r\n    primary: {\r\n      main: '#3f51b5',\r\n    },\r\n    secondary: {\r\n      main: '#f50057',\r\n    },\r\n  },\r\n  components: {\r\n    MuiTypography: {\r\n      styleOverrides: {\r\n        h3: {\r\n          fontWeight: 600,\r\n        },\r\n      },\r\n    },\r\n    MuiButton: {\r\n      styleOverrides: {\r\n        root: {\r\n          textTransform: 'none',\r\n          fontWeight: 500,\r\n          borderRadius: 8,\r\n        },\r\n      },\r\n    },\r\n    MuiTextField: {\r\n      styleOverrides: {\r\n        root: {\r\n          '& .MuiOutlinedInput-root': {\r\n            borderRadius: 8,\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  const [videoUrl, setVideoUrl] = useState('');\r\n  const [videoId, setVideoId] = useState('');\r\n  const [transcript, setTranscript] = useState([]);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleSubmit = (url) => {\r\n    setVideoUrl(url);\r\n    setError(null);\r\n    const id = extractVideoId(url);\r\n    \r\n    if (!id) {\r\n      setError('Invalid YouTube URL. Please provide a valid YouTube video URL.');\r\n      return;\r\n    }\r\n    \r\n    setVideoId(id);\r\n    fetchTranscript(id);\r\n  };\r\n\r\n  const extractVideoId = (url) => {\r\n    const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\r\n    const match = url.match(regExp);\r\n    return match && match[2].length === 11 ? match[2] : null;\r\n  };\r\n\r\n  const fetchTranscript = async (videoId) => {\r\n    try {\r\n      setLoading(true);\r\n      setTranscript([]);\r\n      \r\n      const response = await fetch(`/api/transcript?videoId=${videoId}`);\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Failed to fetch transcript');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (!data.transcript || data.transcript.length === 0) {\r\n        throw new Error('No transcript data available for this video');\r\n      }\r\n      \r\n      setTranscript(data.transcript);\r\n    } catch (error) {\r\n      console.error('Error fetching transcript:', error);\r\n      setError(error.message || 'Failed to fetch transcript');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleTimeUpdate = (time) => {\r\n    setCurrentTime(time);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"md\">\r\n        <Box sx={{ my: 4, textAlign: 'center' }}>\r\n          <Typography variant=\"h3\" component=\"h1\" gutterBottom className=\"app-title\">\r\n            YouTube Transcription\r\n          </Typography>\r\n          <TranscribeForm onSubmit={handleSubmit} isLoading={loading} />\r\n          \r\n          {error && (\r\n            <Alert severity=\"error\" sx={{ mb: 4 }}>\r\n              {error}\r\n            </Alert>\r\n          )}\r\n          \r\n          {videoId && (\r\n            <Box className=\"player-container\">\r\n              <VideoPlayer \r\n                videoId={videoId} \r\n                onTimeUpdate={handleTimeUpdate} \r\n              />\r\n            </Box>\r\n          )}\r\n          \r\n          {loading ? (\r\n            <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\r\n              <CircularProgress />\r\n            </Box>\r\n          ) : transcript.length > 0 ? (\r\n            <Transcript \r\n              transcript={transcript} \r\n              currentTime={currentTime} \r\n            />\r\n          ) : null}\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}