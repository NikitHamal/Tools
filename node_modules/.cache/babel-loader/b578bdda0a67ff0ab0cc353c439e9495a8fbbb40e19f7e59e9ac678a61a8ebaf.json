{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repositories\\\\Tools\\\\src\\\\components\\\\VideoPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Box, Typography, CircularProgress } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VideoPlayer({\n  videoId,\n  onTimeUpdate\n}) {\n  _s();\n  const playerRef = useRef(null);\n  const intervalRef = useRef(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Reset state for new video\n    setLoading(true);\n    setError(null);\n\n    // Clear previous interval if exists\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n\n    // If the YT API is already loaded, initialize player\n    if (window.YT && window.YT.Player) {\n      initializePlayer();\n    } else {\n      // Load YouTube API if not already loaded\n      const tag = document.createElement('script');\n      tag.src = 'https://www.youtube.com/iframe_api';\n\n      // Check if the script is already on the page\n      const existingScript = document.querySelector('script[src=\"https://www.youtube.com/iframe_api\"]');\n      if (!existingScript) {\n        const firstScriptTag = document.getElementsByTagName('script')[0];\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n      }\n\n      // Setup the callback for when API is ready\n      window.onYouTubeIframeAPIReady = initializePlayer;\n    }\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [videoId]);\n  const initializePlayer = () => {\n    try {\n      // Clean up previous player instance if exists\n      if (playerRef.current && typeof playerRef.current.destroy === 'function') {\n        playerRef.current.destroy();\n      }\n\n      // Create new player instance\n      playerRef.current = new window.YT.Player('youtube-player', {\n        height: '390',\n        width: '100%',\n        videoId: videoId,\n        playerVars: {\n          autoplay: 0,\n          modestbranding: 1,\n          rel: 0\n        },\n        events: {\n          onReady: onPlayerReady,\n          onStateChange: onPlayerStateChange,\n          onError: onPlayerError\n        }\n      });\n    } catch (error) {\n      console.error('Error initializing YouTube player:', error);\n      setError('Failed to load the YouTube player. Please try again.');\n      setLoading(false);\n    }\n  };\n  const onPlayerReady = event => {\n    setLoading(false);\n    // Start tracking time\n    intervalRef.current = setInterval(() => {\n      if (playerRef.current && typeof playerRef.current.getCurrentTime === 'function') {\n        onTimeUpdate(playerRef.current.getCurrentTime());\n      }\n    }, 100);\n  };\n  const onPlayerStateChange = event => {\n    // YT.PlayerState.PLAYING = 1\n    if (event.data === 1) {\n      // If the player is paused or stopped, make sure the time tracking is active\n      if (!intervalRef.current) {\n        intervalRef.current = setInterval(() => {\n          onTimeUpdate(playerRef.current.getCurrentTime());\n        }, 100);\n      }\n    }\n    // YT.PlayerState.PAUSED = 2, YT.PlayerState.ENDED = 0\n    else if (event.data === 2 || event.data === 0) {\n      // If the player is paused or ended, we can optionally stop the interval to save resources\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n      }\n    }\n  };\n  const onPlayerError = event => {\n    console.error('YouTube player error:', event);\n    setError('An error occurred while playing the video. This video may be unavailable or restricted.');\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      position: 'relative',\n      pb: 2\n    },\n    children: [loading && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: 'rgba(0,0,0,0.1)',\n        zIndex: 1,\n        borderRadius: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3,\n        backgroundColor: '#f8d7da',\n        color: '#721c24',\n        borderRadius: 1,\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"youtube-player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(VideoPlayer, \"NZKlsvz2xq/Jf7kP08yNK5HdIZ4=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Box","Typography","CircularProgress","jsxDEV","_jsxDEV","VideoPlayer","videoId","onTimeUpdate","_s","playerRef","intervalRef","loading","setLoading","error","setError","current","clearInterval","window","YT","Player","initializePlayer","tag","document","createElement","src","existingScript","querySelector","firstScriptTag","getElementsByTagName","parentNode","insertBefore","onYouTubeIframeAPIReady","destroy","height","width","playerVars","autoplay","modestbranding","rel","events","onReady","onPlayerReady","onStateChange","onPlayerStateChange","onError","onPlayerError","console","event","setInterval","getCurrentTime","data","sx","position","pb","children","top","left","right","bottom","display","alignItems","justifyContent","backgroundColor","zIndex","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","p","color","textAlign","variant","id","_c","$RefreshReg$"],"sources":["D:/Repositories/Tools/src/components/VideoPlayer.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { Box, Typography, CircularProgress } from '@mui/material';\r\n\r\nfunction VideoPlayer({ videoId, onTimeUpdate }) {\r\n  const playerRef = useRef(null);\r\n  const intervalRef = useRef(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Reset state for new video\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    // Clear previous interval if exists\r\n    if (intervalRef.current) {\r\n      clearInterval(intervalRef.current);\r\n      intervalRef.current = null;\r\n    }\r\n    \r\n    // If the YT API is already loaded, initialize player\r\n    if (window.YT && window.YT.Player) {\r\n      initializePlayer();\r\n    } else {\r\n      // Load YouTube API if not already loaded\r\n      const tag = document.createElement('script');\r\n      tag.src = 'https://www.youtube.com/iframe_api';\r\n      \r\n      // Check if the script is already on the page\r\n      const existingScript = document.querySelector('script[src=\"https://www.youtube.com/iframe_api\"]');\r\n      \r\n      if (!existingScript) {\r\n        const firstScriptTag = document.getElementsByTagName('script')[0];\r\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n      }\r\n\r\n      // Setup the callback for when API is ready\r\n      window.onYouTubeIframeAPIReady = initializePlayer;\r\n    }\r\n\r\n    return () => {\r\n      if (intervalRef.current) {\r\n        clearInterval(intervalRef.current);\r\n      }\r\n    };\r\n  }, [videoId]);\r\n\r\n  const initializePlayer = () => {\r\n    try {\r\n      // Clean up previous player instance if exists\r\n      if (playerRef.current && typeof playerRef.current.destroy === 'function') {\r\n        playerRef.current.destroy();\r\n      }\r\n      \r\n      // Create new player instance\r\n      playerRef.current = new window.YT.Player('youtube-player', {\r\n        height: '390',\r\n        width: '100%',\r\n        videoId: videoId,\r\n        playerVars: {\r\n          autoplay: 0,\r\n          modestbranding: 1,\r\n          rel: 0,\r\n        },\r\n        events: {\r\n          onReady: onPlayerReady,\r\n          onStateChange: onPlayerStateChange,\r\n          onError: onPlayerError,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      console.error('Error initializing YouTube player:', error);\r\n      setError('Failed to load the YouTube player. Please try again.');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const onPlayerReady = (event) => {\r\n    setLoading(false);\r\n    // Start tracking time\r\n    intervalRef.current = setInterval(() => {\r\n      if (playerRef.current && typeof playerRef.current.getCurrentTime === 'function') {\r\n        onTimeUpdate(playerRef.current.getCurrentTime());\r\n      }\r\n    }, 100);\r\n  };\r\n\r\n  const onPlayerStateChange = (event) => {\r\n    // YT.PlayerState.PLAYING = 1\r\n    if (event.data === 1) {\r\n      // If the player is paused or stopped, make sure the time tracking is active\r\n      if (!intervalRef.current) {\r\n        intervalRef.current = setInterval(() => {\r\n          onTimeUpdate(playerRef.current.getCurrentTime());\r\n        }, 100);\r\n      }\r\n    } \r\n    // YT.PlayerState.PAUSED = 2, YT.PlayerState.ENDED = 0\r\n    else if (event.data === 2 || event.data === 0) {\r\n      // If the player is paused or ended, we can optionally stop the interval to save resources\r\n      if (intervalRef.current) {\r\n        clearInterval(intervalRef.current);\r\n        intervalRef.current = null;\r\n      }\r\n    }\r\n  };\r\n\r\n  const onPlayerError = (event) => {\r\n    console.error('YouTube player error:', event);\r\n    setError('An error occurred while playing the video. This video may be unavailable or restricted.');\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', position: 'relative', pb: 2 }}>\r\n      {loading && (\r\n        <Box sx={{ \r\n          position: 'absolute', \r\n          top: 0, \r\n          left: 0, \r\n          right: 0, \r\n          bottom: 0, \r\n          display: 'flex', \r\n          alignItems: 'center', \r\n          justifyContent: 'center',\r\n          backgroundColor: 'rgba(0,0,0,0.1)',\r\n          zIndex: 1,\r\n          borderRadius: 1\r\n        }}>\r\n          <CircularProgress />\r\n        </Box>\r\n      )}\r\n      \r\n      {error && (\r\n        <Box sx={{ \r\n          p: 3, \r\n          backgroundColor: '#f8d7da', \r\n          color: '#721c24',\r\n          borderRadius: 1,\r\n          textAlign: 'center'\r\n        }}>\r\n          <Typography variant=\"body1\">{error}</Typography>\r\n        </Box>\r\n      )}\r\n      \r\n      <div id=\"youtube-player\"></div>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default VideoPlayer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}